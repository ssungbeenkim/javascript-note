/* 
https://whatisthenext.tistory.com/103 

*인코딩 
문자나 기호들의 집합을 컴퓨터에서 저장하거나, 통신 목적으로 사용할 경우에는 부호로 바꾸어야 한다.
이를 '문자 인코딩(encoding)' 또는 '부호화'라고 하며 부호화된 문자를 복원하는 것을 '복호화'라고 한다.

* 아스키(ASCII) American Standard Code for Information Interchange
1960년대 미국에서 정의한 표준화한 부호체계. 7비트로 128(2**7)개의 문자를 표현. 
1비트는 통신 에러 검출용으로 사용. '영문' 키보드로 입력할 수 있는 모든 가능성을 담았다.
코드표: https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F2366565058B9999205 
그러나, 아스키코드를 이용해 다른 언어를 표현하기에는 7비트로는 부족

*  ANSI 코드 American National Standards Institute
7비트에서 8비트로 확장. 1byte로 256개의 문자를 표현.
그러나 비유럽 국가 특히 한국, 중국, 일본과 같은 문자가 많은 국가에서는 여전히 제한적 
한글은 자음과 모음의 조합 가능 개수만 따져도 가뿐히 128개를 넘는다. 중국어 역시 한자의 개수가 만 개가 넘는다.
그래서 유니코드(Unicode)라는 전 세계 언어의 문자를 정의하기 위한 국제 표준 코드가 등장

* Unicode: 전 세계의 모든 문자를 다루도록 설계된 표준 문자 전산 처리 방식
4바이트(32비트, 약 42억 자)의 넉넉한 공간에 세상의 모든 문자를 할당한 결과물
지구상에서 통용되는 대부분의 문자들을 포함. 악보 기호, 이모지, 태그, 마작이나 도미노 기호 같은 것들도 포함
어지간한 문자 체계는 유니코드에 집어 넣으려는 계획이 진행중 
빈 공간도 꽤 있어 앞으로 유니코드 공간이 부족한 일이 생기려면 한참 남았다
1991년 10월에 최초 버전(1.0.0)이 발표  1996년 7월 2.0버전이 발표되었는데, 
한국측의 요청으로 한글 대이동 사건이 벌어졌다.
기존 배치는 삭제되고, 현대 한글의 모든 글자 11,172개가 U+AC00~D7A3 영역으로 재배치 되었다. 
그리고 이후로는 한번 할당된 문자는 더이상 옮기지 않는다는 원칙도 만들어졌다


* SBCS(Single Byte Character Set): 1바이트로 문자를 표현하는 문자 집합
* MBCS(Multi-Byte Character Set) : 1바이트 이상으로 문자를 표현하는 문자 집합
* DBCS(Double Byte Character Set) : 2바이트로 문자를 표현하는 문자 집합
* WBCS(Wide Byte Character Set) : 4바이트로 문자를 표현하는 문자 집합

* 문자 인코딩 형태 (character encoding form, CEF): 특정한 문자 집합 안의 문자들을 
컴퓨터 시스템에서 사용할 목적으로 일정한 범위 안의 정수(코드값)들로 변환하는 방법이다.

- UTF-8(Unicode Transformation Format - 8bit): https://namu.wiki/w/UTF-8 
  켄 톰슨과 롭 파이크(Go 언어를 만든 사람)가 만들었다
  가변인코딩 방식으로 1~4바이트로 문자를 표현 가능 1바이트 영역은 아스키 코드와 하위 호환성을 가진다
  UTF-8 인코딩이 가장 널리 쓰이기 때문에 유니코드를 지원하는 대부분의 프로그램들은 일단 UTF-8을 디폴트 상태로 지정해 주는 경우가 많다.

*/
